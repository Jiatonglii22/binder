#!/usr/bin/env ruby
# frozen_string_literal: true
require 'fileutils'

# path to your application root.
APP_ROOT = File.expand_path('..', __dir__)

def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

FileUtils.chdir APP_ROOT do # rubocop:disable Metrics/BlockLength
  # This script is a way to set up or update your development environment automatically.
  # This script is idempotent, so that you can run it at any time and get an expectable outcome.
  # Add necessary setup steps to this file.

  puts "\n== Checking required global bins =="
  begin
    puts "\nChecking for rubygems:"
    system! 'gem --version'
  rescue SystemExit
    f = File.read('.ruby-version').chomp
    abort("\n`gem` not found in path. Please install rubygems:" \
          "\n * rvm: `rvm install #{f}`" \
          "\n * rbenv: `rbenv install #{f}`")
  end

  # TODO: NPM-agnostic package management
  begin
    puts "\nChecking for npm:"
    system! 'npm --version'
  rescue SystemExit
    abort("\n`npm` not found in path. Please install npm.")
  end

  puts "\n== Installing npm dependencies =="
  system! 'npm install'

  puts "\n== Installing gem dependencies =="
  system! 'gem install bundler --conservative'
  system('bundle check') || system!('bundle install')

  puts "\n== Preparing database =="
  system! 'bin/rails db:prepare'
  system! 'bin/rails db:fixtures:load'

  puts "\n== Removing old logs and tempfiles =="
  system! 'bin/rails log:clear tmp:clear'

  puts "\n== Restarting application server =="
  system! 'bin/rails restart'

  puts "\n== Setup is complete! =="
end
